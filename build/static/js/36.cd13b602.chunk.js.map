{"version":3,"file":"static/js/36.cd13b602.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.jsx","webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__km1zJ\"};","import styles from \"./Paginator.module.css\"\r\nimport React, { useState } from \"react\"\r\n\r\nlet Paginator = (props) => {\r\n    let portionSize = props.portionSize\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize); //Определяем количество страниц\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}> - </button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                        onClick={(e) => { props.onPageChanged(p) }}>{p} </span>\r\n                    //(e) - передача события onClick. Можно не писать.\r\n                    //{p} - номер страницы; \r\n                    //{this.props.currentPage === p && styles.selectedPage} - если условие верное, то присвоить стиль\r\n                })}\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}> + </button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__4q0zE\"};","\r\nimport React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/img/monkey.png';\r\n\r\nlet User = ({user, ...props}) => {\r\n\r\n    return (\r\n                   \r\n            <div key={user.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === user.id)}    //метод some() проверяет удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.                        \r\n                            onClick={() => { props.unfollowThunkCreator(user.id) }}> Follow </button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === user.id)} \r\n                            onClick={() => { props.followThunkCreator(user.id) }}> Unfollow </button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from './User'\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>            \r\n            <Paginator currentPage = {props.currentPage} \r\n                       onPageChanged = {props.onPageChanged}\r\n                       totalItemsCount = {props.totalItemsCount}\r\n                       pageSize = {props.pageSize}\r\n                       portionSize = {20}\r\n            />\r\n            {props.usersData.map(user => <User followingInProgress = {props.followingInProgress}\r\n                                               unfollowThunkCreator = {props.unfollowThunkCreator}\r\n                                               followThunkCreator = {props.followThunkCreator}\r\n                                               user = {user}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.usersData\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const gettotalItemsCount = (state) => {\r\n    return state.usersPage.totalItemsCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import { connect } from \"react-redux\";\r\nimport { \r\n    follow, \r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowing,\r\n    requestUsersThunkCreator,\r\n    unfollowThunkCreator,\r\n    followThunkCreator,\r\n} from \"../../redux/usersReducer\";\r\n\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { \r\n    getCurrentPage, \r\n    getFollowingInProgress, \r\n    getIsFetching, \r\n    getPageSize, \r\n    gettotalItemsCount, \r\n    getUsers \r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n        componentDidMount () {   \r\n            this.props.requestUsersThunkCreator(this.props.currentPage,this.props.pageSize)\r\n        }\r\n    \r\n        onPageChanged = (pageNumber) => {\r\n            this.props.requestUsersThunkCreator(pageNumber,this.props.pageSize)\r\n            this.props.setCurrentPage(pageNumber);\r\n        }   \r\n    \r\n            render()\r\n            \r\n            {   \r\n                return <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users  totalItemsCount = {this.props.totalItemsCount}\r\n                        pageSize = {this.props.pageSize}\r\n                        currentPage = {this.props.currentPage}\r\n                        onPageChanged = {this.onPageChanged}\r\n                        usersData = {this.props.usersData}\r\n                        unfollow = {this.props.unfollow}\r\n                        follow = {this.props.follow}\r\n                        followingInProgress = {this.props.followingInProgress}\r\n                        unfollowThunkCreator = {this.props.unfollowThunkCreator}\r\n                        followThunkCreator = {this.props.followThunkCreator}\r\n                              />                                \r\n                </>                  \r\n            }       \r\n    }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersData: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: gettotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n// -------connect цепляет \"dispatch\" за кадром, если вторым параметром передать объект, как показано ниже. \r\n// -------по сути это будет аналогично коду, приведённому тут.\r\n//\r\n//let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => { \r\n//             dispatch(followActionCreator(userID));\r\n//         },\r\n//         unfollow: (userID) => { \r\n//             dispatch(unfollowActionCreator(userID));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersActionCreator(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageActionCreator(pageNumber));\r\n//         },\r\n//         setUsersCount: (totalCount) => {\r\n//             dispatch(setUsersCountActionCreator(totalCount));\r\n//         },\r\n//         toggleIsFetchig: (isFetching) => {\r\n//             dispatch(toggleIsFetchigActionCreator(isFetching));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect (mapStateToProps, \r\n    { \r\n        //если к конекту пришла не функция, а объёкт, то он сам делает dispatch и т.д. (см закомментированный код выше.)\r\n        //если Action Creator ы называются иначе, чем передаваемые функции, надо писать follow:followActionCreator,\r\n        follow,        \r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowing,\r\n        requestUsersThunkCreator,\r\n        followThunkCreator,\r\n        unfollowThunkCreator,\r\n    }\r\n    )(UsersContainer);"],"names":["props","portionSize","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","currentPage","styles","e","onPageChanged","user","to","id","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","unfollowThunkCreator","followThunkCreator","name","status","usersData","getUsers","state","usersPage","getPageSize","gettotalItemsCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsersThunkCreator","setCurrentPage","this","Preloader","unfollow","follow","React","connect","toggleFollowing"],"sourceRoot":""}